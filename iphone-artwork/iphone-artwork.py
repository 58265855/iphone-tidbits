#!/usr/bin/env python

#-------------------------------------------------------------------------------
#
# iPhone artwork extractor
# (c)2008 Dave Peck <code [at] davepeck [dot] org> All Rights Reserved
# http://davepeck.org/software/iphoneart/
#
# This software is free for you to use and modify, for any purpose.
# If you do so, please be sure to mention my name and email address.
# If you're adding the ability to handle newer artwork files, or different ones,
# send me a patch and I'll update this file!
#
# To use, you must have python and the python imaging libraries (PIL) installed.
#
# Then run it (for example) as
# ./iphone-artwork.py -export <artwork file.artwork> ./exportDirectory
#   [or]
# ./iphone-artwork -import <original file.artwork> ./importDirectory <createdFile.artwork>
#
# Please see the README.markdown for information on what files we can (and can't) extract here.
#
#-------------------------------------------------------------------------------



import sys
import os
import os.path as path
import struct
import mmap
import PIL.Image

KeyboardLatinArtwork = 'Keyboard-Latin.artwork'
KeyboardCommonArtwork = 'Keyboard-Common.artwork'
OtherArtwork = 'Other.artwork'
MobilePhonePackedImagesArtwork = 'MobilePhonePackedImages.artwork'
SharedIPhoneArtwork = 'Shared~iphone.artwork'
SharedIPhone2xArtwork = 'Shared@2x~iphone.artwork'
SharedIPadArtwork = 'Shared~ipad.artwork'
SharedIPad2xArtwork = 'Shared@2x~ipad.artwork'

KeyboardLatin_2_0_0_Size = 27957248
KeyboardCommon_2_0_0_Size = 1914880
Other_2_0_0_Size = 4868544
MobilePhonePackedImages_2_0_0_Size = 1422592

KeyboardLatin_2_2_0_Size = 27252736
KeyboardCommon_2_2_0_Size = 2033664
Other_2_2_0_Size = 4880832

Other_3_2_0_Size = 26315264

SharedIPhone_4_1_0_Size = 34798848
SharedIPhone2x_4_1_0_Size = 17663232
SharedIPad_4_1_0_Size = 42315008
SharedIPad2x_4_1_0_Size = 17663232



#
# These image sizes were acquired by trial and error.
#
# If you'd like to update this software to support newer (or older) artwork files,
# read on and I'll explain how I did it.
#
# I started by guessing the sizes and offsets of the first two images in each artwork file,
# and kept exporting the first two images until they looked exactly right. Then I figured
# that the widths and heights should be stored in another file. As it turns out, they appear
# in the compiled UIKit binary. Each width and height is stored as a uint16_t in the binary,
# and after each width/height pair are four unknown bytes. So, I determined the offset into
# UIKit that contained the start of the image sizes and wrote a little code to keep pulling
# out values from the binary until the number of bytes I _would_ read from the .artwork file
# is exactly the number of bytes actually found in the file!
#
# Offsets into UIKit, as compiled for the x86 simulator, for 2.0.0:
#
#     KeyboardLatin_2_0_0_Offset = 0x6022C4
#     KeyboardCommon_2_0_0_Offset = 0x602864
#     Other_2_0_0_Offset = 0x601324
#
# And for 2.2.0:
#
#     KeyboardLatin_2_2_0_Offset = 0x65FE44
#     KeyboardCommon_2_2_0_Offset = 0x660364
#     Other_2_2_0_Offset = 0x65EEA4
#
# And for 4.1.0:
# 
#     SharedIPhone_4_1_0_Offset = 28144484
#     SharedIPhone2x_4_1_0_Offset = 28138660
#     SharedIPad_4_1_0_Offset = XXX
#     SharedIPad2x_4_1_0_Offset = XXX
#
# The image sizes for MobilePhonePackedImages were determined by a third party and I just
# added them back to the app. So I'm not sure what the offset is. Should be easy to determine,
# however.
#
# One last trick was figuring out memory alignments. These appear to be the same across all
# .artwork files, so there should be no need to guess on this anymore. (Again, it was simply
# guesswork until the images exported well.)
#

KeyboardLatin_2_0_0_ImageSizes = [(30, 42), (30, 42), (85, 130), (95, 130), (114, 130), (114, 130), (85, 130), (95, 130), (140, 130), (27, 81), (82, 130), (1, 81), (91, 130), (94, 130), (27, 81), (82, 130), (104, 130), (320, 216), (83, 120), (91, 120), (88, 120), (79, 120), (114, 125), (79, 126), (78, 126), (220, 500), (132, 750), (132, 750), (176, 500), (132, 500), (176, 500), (132, 500), (480, 162), (480, 162), (480, 162), (480, 162), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (42, 43), (42, 43), (320, 216), (320, 216), (320, 216), (320, 216), (240, 43), (43, 43), (43, 43), (37, 43), (37, 43), (1, 41), (1, 37), (1, 19), (480, 180), (103, 120), (115, 120), (126, 120), (99, 120), (110, 126), (85, 126), (85, 126), (480, 162), (66, 38), (66, 38), (66, 38), (480, 162), (480, 162), (480, 38), (382, 38), (52, 38), (52, 38), (47, 38), (47, 38), (480, 162), (480, 162), (480, 162), (480, 162), (480, 162), (480, 162), (480, 162), (480, 162), (66, 38), (66, 38), (76, 45), (66, 38), (76, 45), (99, 38), (480, 162), (480, 162), (66, 38), (99, 38), (99, 38), (480, 162), (99, 38), (480, 162), (480, 162), (52, 38), (52, 38), (47, 38), (47, 38), (480, 162), (480, 162), (480, 162), (480, 162), (480, 162), (480, 162), (480, 162), (99, 38), (480, 162), (480, 162), (66, 38), (381, 8), (99, 38), (480, 162), (480, 162), (480, 162), (480, 162), (480, 162), (480, 38), (382, 38), (480, 162), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (107, 43), (80, 43), (160, 43), (320, 216), (320, 216), (320, 216), (320, 216), (42, 43), (42, 43), (42, 43), (40, 41), (40, 41), (42, 43), (40, 41), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (4, 36), (4, 36), (80, 43), (80, 44), (320, 216), (80, 43), (43, 43), (43, 43), (37, 43), (37, 43), (83, 9), (80, 43), (246, 9), (80, 43), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (480, 180), (320, 216), (320, 216)]
KeyboardCommon_2_0_0_ImageSizes = [(148, 148), (148, 148), (11, 9), (11, 9), (11, 9), (8, 8), (16, 31), (16, 31), (320, 48), (1, 56), (2, 56), (2, 56), (1, 56), (1, 56), (320, 200), (21, 21), (80, 44), (80, 44), (80, 44), (80, 44), (80, 44), (80, 44), (11, 30), (11, 30), (98, 38), (98, 38), (98, 38), (98, 38), (96, 34), (96, 34), (96, 34), (98, 38), (98, 38), (283, 38), (283, 38), (283, 38), (95, 38), (95, 38), (95, 38), (95, 38), (283, 38), (283, 38), (80, 44), (80, 44), (80, 43), (80, 43), (80, 44), (80, 28), (80, 28), (80, 28), (80, 44), (80, 44), (160, 44), (160, 44), (160, 44), (53, 44), (53, 44), (53, 44), (53, 44), (160, 44), (160, 44), (127, 127), (127, 127), (127, 127), (20, 20), (320, 216)]
Other_2_0_0_ImageSizes = [(59, 60), (59, 60), (59, 60), (16, 20), (16, 20), (320, 480), (320, 480), (1, 222), (6, 12), (6, 12), (6, 12), (6, 12), (11, 11), (11, 9), (9, 18), (9, 18), (9, 18), (9, 18), (11, 11), (11, 9), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (29, 29), (29, 29), (29, 29), (1, 22), (27, 46), (27, 46), (27, 46), (25, 46), (25, 46), (25, 46), (25, 46), (1, 44), (27, 46), (27, 46), (25, 46), (25, 46), (25, 46), (280, 2), (3, 31), (25, 25), (25, 25), (22, 17), (21, 18), (17, 14), (16, 19), (13, 13), (16, 19), (13, 13), (21, 18), (17, 14), (22, 23), (27, 28), (27, 28), (1, 44), (1, 49), (11, 24), (24, 16), (20, 16), (24, 18), (20, 15), (22, 18), (29, 29), (29, 29), (1, 44), (1, 32), (20, 20), (21, 19), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (18, 19), (18, 19), (19, 19), (17, 17), (11, 24), (11, 24), (29, 16), (33, 16), (18, 18), (15, 15), (13, 13), (23, 18), (19, 19), (34, 30), (28, 24), (34, 30), (28, 24), (34, 30), (28, 24), (34, 30), (34, 30), (28, 24), (28, 24), (14, 16), (15, 18), (16, 17), (100, 100), (23, 18), (18, 22), (25, 20), (21, 19), (20, 20), (7, 7), (17, 17), (16, 21), (18, 19), (18, 19), (1, 44), (1, 57), (41, 70), (17, 57), (17, 57), (41, 70), (3, 19), (1, 44), (1, 96), (13, 16), (23, 19), (21, 30), (11, 30), (21, 30), (1, 44), (11, 30), (1, 74), (21, 30), (1, 44), (11, 30), (1, 74), (21, 30), (21, 30), (1, 44), (11, 30), (11, 30), (1, 74), (11, 30), (11, 30), (15, 24), (15, 24), (1, 32), (9, 24), (9, 24), (15, 24), (15, 24), (1, 32), (9, 24), (9, 24), (15, 24), (15, 24), (1, 32), (9, 24), (9, 24), (9, 24), (11, 30), (11, 30), (6, 6), (6, 6), (62, 52), (11, 53), (15, 39), (15, 39), (18, 18), (1, 180), (1, 216), (15, 180), (15, 216), (15, 216), (1, 180), (1, 216), (15, 180), (15, 216), (15, 216), (9, 44), (1, 48), (1, 62), (1, 180), (1, 216), (9, 180), (9, 216), (7, 1), (19, 46), (19, 46), (11, 14), (284, 62), (11, 43), (11, 43), (11, 43), (14, 14), (13, 44), (13, 44), (14, 14), (15, 11), (14, 14), (29, 29), (13, 3), (29, 29), (17, 33), (17, 33), (8, 31), (8, 31), (8, 31), (1, 31), (1, 31), (1, 31), (8, 31), (8, 31), (8, 31), (5, 5), (7, 7), (5, 5), (54, 54), (1, 30), (5, 9), (5, 9), (1, 9), (1, 8), (4, 8), (4, 8), (17, 18), (22, 24), (5, 9), (5, 9), (1, 9), (40, 29), (40, 29), (35, 31), (35, 31), (15, 15), (17, 31), (17, 31), (17, 31), (1, 31), (1, 31), (1, 31), (17, 31), (17, 31), (17, 31), (1, 23), (1, 23), (8, 10), (13, 30), (1, 30), (6, 30), (6, 30), (1, 30), (1, 30), (21, 44), (1, 44), (10, 44), (10, 44), (1, 44), (6, 44), (6, 44), (21, 44), (1, 44), (10, 44), (10, 44), (1, 44), (6, 44), (6, 44), (46, 46), (9, 46), (9, 46), (46, 46), (46, 46), (9, 46), (9, 46), (9, 46), (9, 46), (1, 46), (1, 46), (1, 46), (1, 46), (11, 9), (5, 9), (1, 9), (23, 23), (23, 23), (11, 9), (5, 9), (1, 9), (320, 128), (320, 460), (17, 27), (17, 27), (17, 27), (17, 27), (14, 16), (2, 16), (17, 27), (17, 27), (5, 27), (11, 27), (11, 27), (11, 27), (48, 32), (36, 39), (36, 39), (28, 20), (45, 36), (45, 36), (32, 29), (33, 39), (33, 39), (29, 29), (35, 39), (35, 39), (29, 28), (40, 39), (40, 39), (38, 25), (45, 36), (45, 36), (25, 25), (29, 16), (33, 16), (29, 7), (31, 39), (31, 39), (23, 23), (37, 39), (37, 39), (35, 21), (30, 39), (30, 39), (24, 24), (3, 19), (3, 19), (19, 17), (10, 13), (29, 31), (29, 31), (10, 13), (1, 43), (1, 43), (1, 43), (1, 43), (1, 43), (6, 6), (10, 10), (19, 19), (19, 19), (302, 46), (1, 17), (1, 14), (302, 46), (1, 216), (15, 216), (1, 216), (15, 216), (9, 44), (1, 48), (1, 62), (1, 216), (9, 216), (19, 30), (19, 30), (19, 30), (1, 44), (11, 30), (11, 30), (11, 30), (21, 51), (21, 51), (21, 51), (21, 51), (15, 24), (15, 24), (15, 24), (1, 32), (9, 24), (9, 24), (9, 24), (1, 32), (1, 30), (1, 30), (11, 30), (11, 30), (11, 30), (11, 30), (11, 30), (11, 30), (1, 44), (1, 30), (13, 13), (24, 26)]
MobilePhonePackedImages_2_0_0_ImageSizes = [(70, 68), (40, 47), (70, 68), (40, 47), (34, 45), (70, 67), (96, 107), (91, 107), (97, 107), (96, 115), (91, 115), (97, 115), (96, 107), (91, 107), (97, 107), (96, 115), (91, 115), (97, 115), (45, 36), (45, 36), (45, 35), (45, 35), (45, 35), (45, 35), (45, 36), (45, 36), (45, 36), (45, 36), (8, 74), (320, 273), (320, 273)]

KeyboardLatin_2_2_0_ImageSizes = [(30, 42), (30, 42), (320, 216), (83, 120), (91, 120), (88, 120), (79, 120), (114, 125), (79, 126), (78, 126), (220, 500), (132, 750), (132, 750), (176, 500), (132, 500), (176, 500), (132, 500), (480, 162), (480, 162), (480, 162), (480, 162), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (42, 43), (42, 43), (320, 216), (320, 216), (320, 216), (320, 216), (240, 43), (43, 43), (43, 43), (37, 43), (37, 43), (1, 41), (1, 37), (1, 19), (480, 180), (103, 120), (115, 120), (126, 120), (99, 120), (110, 126), (85, 126), (85, 126), (480, 162), (66, 38), (66, 38), (66, 38), (480, 162), (480, 162), (480, 38), (382, 38), (52, 38), (52, 38), (47, 38), (47, 38), (480, 162), (480, 162), (480, 162), (480, 162), (480, 162), (480, 162), (480, 162), (480, 162), (66, 38), (66, 38), (76, 45), (66, 38), (76, 45), (99, 38), (480, 162), (480, 162), (66, 38), (99, 38), (99, 38), (480, 162), (99, 38), (480, 162), (480, 162), (52, 38), (52, 38), (47, 38), (47, 38), (480, 162), (480, 162), (480, 162), (480, 162), (480, 162), (480, 162), (480, 162), (99, 38), (480, 162), (480, 162), (66, 38), (381, 8), (99, 38), (480, 162), (480, 162), (480, 162), (480, 162), (480, 162), (480, 38), (382, 38), (480, 162), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (107, 43), (80, 43), (160, 43), (320, 216), (320, 216), (320, 216), (320, 216), (42, 43), (42, 43), (42, 43), (40, 41), (40, 41), (42, 43), (40, 41), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (4, 36), (4, 36), (80, 43), (80, 44), (320, 216), (80, 43), (43, 43), (43, 43), (37, 43), (37, 43), (83, 9), (80, 43), (246, 9), (80, 43), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (480, 180), (320, 216), (320, 216)]
KeyboardCommon_2_2_0_ImageSizes = [(100, 70), (100, 70), (100, 70), (56, 75), (148, 148), (148, 148), (11, 9), (11, 9), (11, 9), (8, 8), (16, 31), (16, 31), (320, 48), (1, 56), (2, 56), (2, 56), (1, 56), (1, 56), (320, 200), (21, 21), (80, 44), (80, 44), (80, 44), (80, 44), (80, 44), (80, 44), (11, 30), (11, 30), (98, 38), (98, 38), (98, 38), (98, 38), (96, 34), (96, 34), (96, 34), (98, 38), (98, 38), (283, 38), (283, 38), (283, 38), (95, 38), (95, 38), (95, 38), (95, 38), (283, 38), (283, 38), (80, 44), (80, 44), (80, 43), (80, 43), (80, 44), (80, 28), (80, 28), (80, 28), (80, 44), (80, 44), (160, 44), (160, 44), (160, 44), (53, 44), (53, 44), (53, 44), (53, 44), (160, 44), (160, 44), (127, 127), (127, 127), (127, 127), (20, 20), (320, 216)]
Other_2_2_0_ImageSizes = [(59, 60), (59, 60), (59, 60), (16, 20), (16, 20), (320, 480), (320, 480), (1, 222), (6, 12), (6, 12), (6, 12), (6, 12), (11, 11), (11, 9), (9, 18), (9, 18), (9, 18), (9, 18), (11, 11), (11, 9), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (29, 29), (29, 29), (29, 29), (1, 22), (27, 46), (27, 46), (27, 46), (25, 46), (25, 46), (25, 46), (25, 46), (1, 44), (27, 46), (27, 46), (25, 46), (25, 46), (25, 46), (280, 2), (3, 31), (25, 25), (25, 25), (22, 17), (21, 18), (17, 14), (16, 19), (13, 13), (16, 19), (13, 13), (21, 18), (17, 14), (22, 23), (27, 28), (27, 28), (1, 44), (1, 49), (11, 24), (24, 16), (20, 16), (24, 18), (20, 15), (22, 18), (29, 29), (29, 29), (1, 44), (1, 32), (20, 20), (21, 19), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (18, 19), (18, 19), (19, 19), (17, 17), (11, 24), (11, 24), (29, 16), (33, 16), (18, 18), (15, 15), (13, 13), (23, 18), (19, 19), (34, 30), (28, 24), (34, 30), (28, 24), (34, 30), (28, 24), (34, 30), (34, 30), (28, 24), (28, 24), (14, 16), (15, 18), (16, 17), (100, 100), (23, 18), (18, 22), (25, 20), (21, 19), (20, 20), (7, 7), (17, 17), (16, 21), (18, 19), (18, 19), (1, 44), (1, 57), (41, 70), (17, 57), (17, 57), (41, 70), (3, 19), (1, 44), (1, 96), (13, 16), (23, 19), (21, 30), (11, 30), (21, 30), (1, 44), (11, 30), (1, 74), (21, 30), (1, 44), (11, 30), (1, 74), (21, 30), (21, 30), (1, 44), (11, 30), (11, 30), (1, 74), (11, 30), (11, 30), (15, 24), (15, 24), (1, 32), (9, 24), (9, 24), (15, 24), (15, 24), (1, 32), (9, 24), (9, 24), (15, 24), (15, 24), (1, 32), (9, 24), (9, 24), (9, 24), (11, 30), (11, 30), (6, 6), (6, 6), (62, 52), (11, 53), (15, 39), (15, 39), (18, 18), (1, 180), (1, 216), (15, 180), (15, 216), (15, 216), (1, 180), (1, 216), (15, 180), (15, 216), (15, 216), (9, 44), (1, 48), (1, 62), (1, 180), (1, 216), (9, 180), (9, 216), (7, 1), (19, 46), (19, 46), (11, 14), (284, 62), (11, 43), (11, 43), (11, 43), (14, 14), (13, 44), (13, 44), (14, 14), (15, 11), (14, 14), (29, 29), (13, 3), (29, 29), (17, 33), (17, 33), (8, 31), (8, 31), (8, 31), (1, 31), (1, 31), (1, 31), (8, 31), (8, 31), (8, 31), (5, 5), (7, 7), (5, 5), (54, 54), (1, 30), (5, 9), (5, 9), (1, 9), (1, 8), (4, 8), (4, 8), (17, 18), (22, 24), (5, 9), (5, 9), (1, 9), (40, 29), (40, 29), (35, 31), (35, 31), (15, 15), (17, 31), (17, 31), (17, 31), (1, 31), (1, 31), (1, 31), (17, 31), (17, 31), (17, 31), (1, 23), (1, 23), (8, 10), (13, 30), (1, 30), (6, 30), (6, 30), (1, 30), (1, 30), (21, 44), (1, 44), (10, 44), (10, 44), (1, 44), (6, 44), (6, 44), (21, 44), (1, 44), (10, 44), (10, 44), (1, 44), (6, 44), (6, 44), (1, 35), (9, 26), (9, 26), (46, 46), (9, 46), (9, 46), (46, 46), (46, 46), (9, 46), (9, 46), (9, 46), (9, 46), (1, 46), (1, 46), (1, 46), (1, 46), (11, 9), (5, 9), (1, 9), (23, 23), (23, 23), (11, 9), (5, 9), (1, 9), (320, 128), (320, 460), (17, 27), (17, 27), (17, 27), (17, 27), (14, 16), (2, 16), (17, 27), (17, 27), (5, 27), (11, 27), (11, 27), (11, 27), (48, 32), (36, 39), (36, 39), (28, 20), (45, 36), (45, 36), (32, 29), (33, 39), (33, 39), (29, 29), (35, 39), (35, 39), (29, 28), (40, 39), (40, 39), (38, 25), (45, 36), (45, 36), (25, 25), (29, 16), (33, 16), (29, 7), (31, 39), (31, 39), (23, 23), (37, 39), (37, 39), (35, 21), (30, 39), (30, 39), (24, 24), (3, 19), (3, 19), (19, 17), (10, 13), (29, 31), (29, 31), (10, 13), (1, 43), (1, 43), (1, 43), (1, 43), (1, 43), (6, 6), (10, 10), (19, 19), (19, 19), (302, 46), (1, 17), (1, 14), (302, 46), (1, 216), (15, 216), (1, 216), (15, 216), (9, 44), (1, 48), (1, 62), (1, 216), (9, 216), (19, 30), (19, 30), (19, 30), (1, 44), (11, 30), (11, 30), (11, 30), (21, 51), (21, 51), (21, 51), (21, 51), (15, 24), (15, 24), (15, 24), (1, 32), (9, 24), (9, 24), (9, 24), (1, 32), (1, 30), (1, 30), (11, 30), (11, 30), (11, 30), (11, 30), (11, 30), (11, 30), (1, 44), (1, 30), (13, 13), (24, 26)]

Other_3_2_0_ImageSizes = [(16, 20), (16, 20), (30, 30), (1024, 1024), (320, 480), (320, 480), (1, 222), (8, 28), (6, 12), (6, 12), (6, 12), (6, 12), (11, 11), (11, 11), (11, 11), (11, 9), (9, 18), (9, 18), (9, 18), (9, 18), (11, 11), (11, 11), (11, 11), (11, 9), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (1, 22), (23, 28), (23, 28), (27, 46), (27, 46), (27, 46), (25, 46), (25, 46), (25, 46), (25, 46), (1, 44), (27, 46), (27, 46), (25, 46), (25, 46), (25, 46), (1, 23), (11, 43), (11, 43), (11, 43), (11, 43), (11, 43), (11, 43), (280, 2), (3, 31), (9, 10), (25, 25), (25, 25), (29, 29), (29, 29), (23, 18), (21, 18), (17, 14), (16, 19), (13, 13), (16, 19), (13, 13), (21, 18), (17, 14), (22, 23), (27, 28), (27, 28), (1, 44), (1, 49), (1, 49), (1, 44), (11, 24), (24, 16), (20, 16), (24, 18), (20, 15), (22, 18), (18, 14), (29, 29), (29, 29), (1, 44), (1, 32), (1, 32), (1, 44), (20, 20), (21, 19), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (18, 19), (18, 19), (19, 19), (17, 17), (11, 24), (11, 24), (29, 16), (33, 16), (18, 18), (15, 15), (13, 13), (23, 18), (19, 19), (16, 17), (34, 30), (28, 24), (34, 30), (28, 24), (34, 30), (28, 24), (34, 30), (34, 30), (28, 24), (28, 24), (14, 16), (15, 18), (16, 17), (100, 100), (23, 18), (18, 22), (14, 17), (18, 21), (25, 20), (20, 16), (21, 19), (20, 20), (7, 7), (1, 44), (1, 44), (17, 17), (16, 21), (18, 19), (18, 19), (1, 44), (1, 32), (1, 44), (24, 17), (24, 17), (26, 38), (26, 38), (26, 38), (26, 38), (47, 38), (47, 38), (47, 38), (47, 38), (24, 12), (24, 12), (2, 38), (21, 38), (21, 38), (1, 38), (1, 38), (21, 38), (21, 38), (11, 17), (1, 17), (11, 17), (21, 38), (21, 38), (24, 22), (24, 22), (1, 57), (41, 70), (17, 57), (17, 57), (41, 70), (4, 4), (520, 360), (360, 520), (480, 20), (320, 20), (49, 48), (49, 48), (3, 19), (1, 44), (1, 44), (1, 96), (1, 108), (1, 43), (1, 43), (21, 43), (21, 43), (21, 43), (21, 43), (1, 30), (4, 30), (4, 30), (9, 30), (1, 30), (4, 30), (4, 30), (9, 30), (15, 43), (13, 16), (23, 19), (21, 30), (11, 30), (21, 30), (1, 44), (11, 30), (1, 74), (21, 30), (1, 44), (11, 30), (1, 74), (21, 30), (21, 30), (1, 44), (11, 30), (11, 30), (1, 74), (11, 30), (11, 30), (13, 30), (13, 30), (15, 24), (15, 24), (1, 32), (9, 24), (9, 24), (15, 24), (15, 24), (1, 32), (9, 24), (9, 24), (15, 24), (15, 24), (1, 32), (9, 24), (9, 24), (9, 24), (9, 24), (9, 24), (20, 30), (20, 30), (13, 30), (13, 30), (11, 30), (11, 30), (20, 30), (20, 30), (1, 44), (13, 30), (13, 30), (1, 74), (11, 30), (11, 30), (6, 6), (6, 6), (62, 52), (11, 53), (15, 39), (15, 39), (18, 18), (1, 162), (1, 180), (1, 216), (15, 162), (15, 162), (15, 180), (15, 180), (15, 216), (15, 216), (15, 216), (15, 216), (1, 162), (1, 180), (1, 216), (1, 216), (15, 162), (15, 162), (15, 180), (15, 180), (15, 216), (15, 216), (15, 216), (15, 216), (9, 44), (1, 48), (1, 62), (1, 62), (1, 162), (1, 180), (1, 216), (9, 162), (9, 180), (9, 216), (7, 1), (19, 33), (19, 46), (19, 33), (19, 46), (288, 167), (288, 167), (306, 150), (306, 150), (306, 150), (288, 167), (288, 167), (328, 31), (288, 167), (288, 167), (306, 150), (306, 150), (306, 150), (288, 167), (288, 167), (288, 167), (288, 167), (306, 150), (306, 150), (306, 150), (288, 167), (288, 167), (288, 73), (288, 73), (309, 56), (288, 73), (288, 73), (288, 73), (288, 73), (309, 56), (288, 73), (288, 73), (288, 73), (288, 73), (309, 56), (288, 73), (288, 73), (11, 14), (284, 62), (284, 62), (11, 43), (11, 43), (11, 43), (14, 14), (13, 44), (13, 44), (14, 14), (15, 11), (14, 14), (29, 29), (29, 29), (29, 29), (29, 29), (29, 29), (17, 33), (17, 33), (8, 31), (8, 31), (6, 30), (8, 31), (6, 30), (1, 31), (1, 31), (1, 30), (1, 31), (1, 30), (8, 31), (8, 31), (6, 30), (8, 31), (6, 30), (10, 10), (1, 10), (5, 5), (7, 7), (5, 5), (54, 54), (1, 6), (1, 30), (5, 9), (5, 9), (1, 9), (1, 8), (4, 8), (4, 8), (17, 18), (22, 24), (5, 9), (5, 9), (1, 9), (40, 29), (40, 29), (35, 31), (35, 31), (35, 31), (35, 31), (11, 30), (11, 30), (1, 44), (1, 1), (15, 15), (17, 31), (17, 31), (15, 30), (17, 31), (15, 30), (1, 31), (1, 31), (1, 30), (1, 31), (1, 30), (17, 31), (17, 31), (15, 30), (17, 31), (15, 30), (1, 23), (1, 23), (8, 10), (12, 30), (12, 30), (1, 30), (1, 30), (10, 24), (10, 24), (1, 24), (1, 24), (12, 30), (12, 30), (13, 30), (13, 30), (13, 30), (13, 30), (1, 30), (1, 30), (1, 30), (1, 30), (1, 30), (1, 30), (10, 24), (10, 24), (1, 24), (1, 24), (13, 30), (13, 30), (1, 30), (1, 30), (22, 44), (22, 44), (1, 44), (6, 44), (6, 44), (22, 44), (22, 44), (1, 44), (6, 44), (6, 44), (1, 44), (1, 44), (11, 30), (11, 30), (13, 30), (13, 30), (1, 30), (1, 30), (1, 30), (1, 30), (46, 46), (9, 46), (9, 46), (46, 46), (46, 46), (9, 46), (9, 46), (9, 46), (9, 46), (1, 46), (1, 46), (1, 46), (1, 46), (11, 43), (11, 43), (11, 43), (11, 43), (11, 14), (11, 14), (11, 9), (5, 9), (1, 9), (23, 23), (23, 23), (11, 9), (5, 9), (1, 9), (6, 6), (1024, 1024), (1024, 1024), (256, 256), (320, 128), (320, 460), (17, 27), (17, 27), (17, 27), (17, 27), (14, 16), (2, 16), (17, 27), (17, 27), (5, 27), (11, 27), (11, 27), (11, 27), (48, 32), (36, 39), (36, 39), (28, 20), (45, 36), (45, 36), (32, 29), (33, 39), (33, 39), (29, 29), (35, 39), (35, 39), (29, 28), (40, 39), (40, 39), (38, 25), (45, 36), (45, 36), (25, 25), (29, 16), (33, 16), (29, 7), (31, 39), (31, 39), (23, 23), (37, 39), (37, 39), (35, 21), (30, 39), (30, 39), (24, 24), (3, 19), (3, 19), (19, 17), (1, 14), (1, 14), (10, 13), (29, 31), (29, 31), (10, 13), (1, 43), (1, 43), (1, 43), (1, 43), (1, 43), (6, 6), (10, 10), (19, 19), (19, 19), (19, 19), (19, 19), (302, 46), (1, 17), (1, 14), (302, 46), (1, 216), (15, 216), (1, 216), (15, 216), (9, 44), (1, 48), (1, 62), (1, 216), (9, 216), (19, 30), (19, 30), (19, 30), (19, 30), (1, 44), (1, 44), (11, 30), (11, 30), (11, 30), (11, 30), (29, 29), (29, 29), (29, 29), (29, 29), (29, 29), (21, 51), (21, 51), (21, 51), (21, 51), (15, 24), (15, 24), (15, 24), (1, 32), (9, 24), (9, 24), (9, 24), (1, 32), (1, 30), (1, 30), (1, 30), (1, 30), (11, 30), (11, 30), (11, 30), (11, 30), (11, 30), (11, 30), (11, 30), (11, 30), (1, 24), (1, 24), (9, 24), (9, 24), (9, 24), (9, 24), (9, 24), (9, 24), (1, 44), (1, 44), (1, 30), (13, 13), (24, 26), (14, 14), (88, 28), (95, 28)]

SharedIPhone_4_1_0_ImageSizes = [(16, 20), (16, 20), (19, 20), (20, 20), (19, 20), (20, 20), (19, 20), (20, 20), (19, 20), (20, 20), (19, 20), (19, 20), (16, 20), (10, 20), (5, 20), (21, 20), (21, 20), (21, 20), (3, 20), (3, 20), (11, 20), (11, 20), (25, 20), (12, 20), (6, 20), (7, 20), (15, 20), (19, 20), (13, 20), (10, 20), (12, 20), (8, 20), (5, 20), (7, 20), (7, 20), (8, 20), (7, 20), (7, 20), (7, 20), (7, 20), (7, 20), (12, 20), (8, 20), (5, 20), (7, 20), (7, 20), (8, 20), (7, 20), (7, 20), (7, 20), (7, 20), (7, 20), (10, 20), (10, 20), (20, 20), (11, 20), (20, 20), (1, 20), (1, 222), (320, 40), (320, 40), (320, 40), (320, 40), (6, 12), (6, 12), (6, 12), (6, 12), (11, 11), (11, 11), (11, 11), (11, 9), (9, 18), (9, 18), (9, 18), (9, 18), (11, 11), (11, 11), (11, 11), (11, 9), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (320, 40), (320, 40), (19, 20), (20, 20), (19, 20), (20, 20), (19, 20), (20, 20), (19, 20), (20, 20), (19, 20), (19, 20), (16, 20), (10, 20), (5, 20), (21, 20), (21, 20), (21, 20), (3, 20), (3, 20), (11, 20), (11, 20), (4, 4), (25, 20), (12, 20), (6, 20), (7, 20), (15, 20), (19, 20), (1, 20), (1, 20), (13, 20), (12, 20), (8, 20), (5, 20), (7, 20), (7, 20), (8, 20), (7, 20), (7, 20), (7, 20), (7, 20), (7, 20), (12, 20), (8, 20), (5, 20), (7, 20), (7, 20), (8, 20), (7, 20), (7, 20), (7, 20), (7, 20), (7, 20), (10, 20), (10, 20), (20, 20), (11, 20), (20, 20), (1, 21), (320, 40), (320, 40), (1, 22), (5, 20), (23, 28), (23, 28), (27, 46), (27, 46), (27, 46), (25, 46), (25, 46), (25, 46), (25, 46), (1, 44), (27, 46), (27, 46), (25, 46), (25, 46), (25, 46), (1, 23), (11, 43), (11, 43), (11, 43), (11, 43), (11, 43), (11, 43), (280, 2), (3, 31), (9, 10), (25, 25), (25, 25), (29, 29), (29, 29), (23, 18), (22, 17), (21, 18), (17, 14), (16, 19), (13, 13), (16, 19), (13, 13), (21, 18), (17, 14), (22, 23), (27, 28), (27, 28), (1, 44), (1, 49), (1, 49), (1, 44), (11, 24), (24, 16), (20, 16), (24, 18), (20, 15), (22, 18), (18, 14), (29, 29), (29, 29), (1, 44), (1, 32), (1, 32), (1, 44), (20, 20), (21, 19), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (18, 19), (18, 19), (19, 19), (17, 17), (11, 24), (11, 24), (29, 16), (33, 16), (18, 18), (15, 15), (13, 13), (23, 18), (19, 19), (16, 17), (34, 30), (28, 24), (34, 30), (28, 24), (34, 30), (28, 24), (34, 30), (34, 30), (28, 24), (28, 24), (14, 16), (15, 18), (16, 17), (100, 100), (23, 18), (18, 22), (14, 17), (18, 21), (25, 20), (20, 16), (21, 19), (20, 20), (7, 7), (1, 44), (1, 44), (17, 17), (16, 21), (18, 19), (18, 19), (1, 44), (1, 32), (1, 44), (24, 17), (24, 17), (26, 38), (26, 38), (26, 38), (26, 38), (47, 38), (47, 38), (47, 38), (47, 38), (24, 12), (24, 12), (2, 38), (21, 38), (21, 38), (1, 38), (1, 38), (21, 38), (21, 38), (11, 17), (1, 17), (11, 17), (21, 38), (21, 38), (24, 22), (24, 22), (1, 57), (41, 70), (17, 57), (17, 57), (41, 70), (3, 19), (1, 44), (1, 96), (1, 108), (1, 43), (1, 43), (21, 43), (21, 43), (21, 43), (21, 43), (1, 30), (4, 30), (4, 30), (9, 30), (1, 30), (4, 30), (4, 30), (9, 30), (15, 43), (13, 16), (23, 19), (21, 30), (11, 30), (21, 30), (1, 44), (11, 30), (1, 74), (21, 30), (1, 44), (11, 30), (1, 74), (21, 30), (21, 30), (1, 44), (11, 30), (11, 30), (1, 74), (11, 30), (11, 30), (13, 30), (13, 30), (15, 24), (15, 24), (1, 32), (9, 24), (9, 24), (15, 24), (15, 24), (1, 32), (9, 24), (9, 24), (15, 24), (15, 24), (1, 32), (9, 24), (9, 24), (9, 24), (9, 24), (9, 24), (20, 30), (20, 30), (13, 30), (13, 30), (11, 30), (11, 30), (21, 30), (21, 30), (1, 44), (11, 30), (11, 30), (1, 74), (11, 30), (11, 30), (6, 6), (6, 6), (62, 52), (11, 53), (15, 39), (15, 39), (18, 18), (1, 162), (1, 180), (1, 216), (15, 162), (15, 162), (15, 180), (15, 180), (15, 216), (15, 216), (15, 216), (15, 216), (1, 162), (1, 180), (1, 216), (1, 216), (15, 162), (15, 162), (15, 180), (15, 180), (15, 216), (15, 216), (15, 216), (15, 216), (9, 44), (1, 48), (1, 62), (1, 62), (1, 162), (1, 180), (1, 216), (9, 162), (9, 180), (9, 216), (7, 1), (19, 33), (19, 46), (19, 33), (19, 46), (11, 14), (11, 14), (284, 62), (284, 62), (11, 43), (11, 43), (11, 43), (14, 14), (13, 44), (13, 44), (14, 14), (15, 11), (14, 14), (29, 29), (29, 29), (29, 29), (29, 29), (29, 29), (17, 33), (17, 33), (8, 31), (8, 31), (6, 30), (8, 31), (6, 30), (1, 31), (1, 31), (1, 30), (1, 31), (1, 30), (8, 31), (8, 31), (6, 30), (8, 31), (6, 30), (10, 10), (1, 10), (5, 5), (7, 7), (5, 5), (54, 54), (1, 6), (1, 30), (5, 9), (5, 9), (1, 9), (1, 8), (4, 8), (4, 8), (17, 18), (22, 24), (5, 9), (5, 9), (1, 9), (40, 29), (40, 29), (35, 31), (35, 31), (35, 31), (35, 31), (11, 30), (11, 30), (1, 44), (1, 1), (15, 15), (17, 31), (17, 31), (15, 30), (17, 31), (15, 30), (1, 31), (1, 31), (1, 30), (1, 31), (1, 30), (17, 31), (17, 31), (15, 30), (17, 31), (15, 30), (1, 23), (1, 23), (8, 10), (12, 30), (12, 30), (1, 30), (1, 30), (10, 24), (10, 24), (1, 24), (1, 24), (12, 30), (12, 30), (13, 30), (13, 30), (13, 30), (13, 30), (1, 30), (1, 30), (1, 30), (1, 30), (1, 30), (1, 30), (10, 24), (10, 24), (1, 24), (1, 24), (13, 30), (13, 30), (1, 30), (1, 30), (22, 44), (22, 44), (1, 44), (6, 44), (6, 44), (22, 44), (22, 44), (1, 44), (6, 44), (6, 44), (1, 44), (1, 44), (11, 30), (11, 30), (13, 30), (13, 30), (1, 30), (1, 30), (1, 30), (1, 30), (46, 46), (9, 46), (9, 46), (46, 46), (46, 46), (9, 46), (9, 46), (9, 46), (9, 46), (1, 46), (1, 46), (1, 46), (1, 46), (11, 9), (5, 9), (1, 9), (23, 23), (23, 23), (11, 9), (5, 9), (1, 9), (6, 6), (1024, 1024), (1024, 1024), (256, 256), (256, 256), (320, 460), (17, 27), (17, 27), (17, 27), (17, 27), (14, 16), (2, 16), (17, 27), (17, 27), (5, 27), (11, 27), (11, 27), (11, 27), (48, 32), (36, 39), (36, 39), (28, 20), (45, 36), (45, 36), (32, 29), (33, 39), (33, 39), (29, 29), (35, 39), (35, 39), (29, 28), (40, 39), (40, 39), (38, 25), (45, 36), (45, 36), (25, 25), (29, 16), (33, 16), (29, 7), (31, 39), (31, 39), (23, 23), (37, 39), (37, 39), (35, 21), (30, 39), (30, 39), (24, 24), (3, 19), (3, 19), (19, 17), (1, 14), (1, 14), (10, 13), (29, 31), (29, 31), (10, 13), (1, 43), (1, 43), (1, 43), (1, 43), (1, 43), (6, 6), (10, 10), (19, 19), (19, 19), (19, 19), (19, 19), (302, 46), (1, 17), (1, 14), (302, 46), (1, 216), (15, 216), (1, 216), (15, 216), (9, 44), (1, 48), (1, 62), (1, 216), (9, 216), (19, 30), (19, 30), (19, 30), (19, 30), (1, 44), (1, 44), (11, 30), (11, 30), (11, 30), (11, 30), (29, 29), (29, 29), (29, 29), (29, 29), (29, 29), (21, 51), (21, 51), (21, 51), (21, 51), (15, 24), (15, 24), (15, 24), (1, 32), (9, 24), (9, 24), (9, 24), (1, 32), (1, 30), (1, 30), (1, 30), (1, 30), (11, 30), (11, 30), (11, 30), (11, 30), (11, 30), (11, 30), (11, 30), (11, 30), (1, 38), (13, 41), (13, 41), (13, 40), (1, 24), (1, 24), (9, 24), (9, 24), (9, 24), (9, 24), (9, 24), (9, 24), (1, 44), (1, 44), (1, 30), (13, 13), (13, 13), (13, 13), (13, 13), (24, 26), (100, 70), (100, 70), (100, 70), (56, 75), (11, 9), (11, 9), (11, 9), (8, 8), (7, 7), (24, 11), (24, 11), (80, 44), (80, 44), (80, 44), (80, 44), (80, 44), (80, 44), (25, 26), (13, 17), (31, 26), (98, 38), (98, 38), (98, 38), (98, 38), (96, 34), (96, 34), (96, 34), (98, 38), (98, 38), (283, 38), (283, 38), (283, 38), (95, 38), (95, 38), (95, 38), (95, 38), (283, 38), (283, 38), (80, 44), (80, 44), (80, 43), (80, 43), (80, 44), (80, 28), (80, 28), (80, 28), (80, 44), (80, 44), (160, 44), (160, 44), (160, 44), (53, 44), (53, 44), (53, 44), (53, 44), (160, 44), (160, 44), (127, 127), (127, 127), (127, 127), (145, 59), (141, 55), (145, 59), (145, 59), (20, 20), (110, 114), (110, 114), (110, 114), (110, 114), (110, 114), (110, 114), (110, 114), (110, 114), (64, 64), (30, 42), (30, 42), (320, 216), (83, 120), (91, 120), (88, 120), (79, 120), (102, 114), (114, 125), (79, 126), (78, 126), (220, 500), (132, 750), (132, 750), (176, 500), (132, 500), (176, 500), (132, 500), (42, 43), (42, 43), (320, 216), (320, 216), (320, 216), (320, 216), (240, 43), (43, 43), (43, 43), (37, 43), (37, 43), (103, 120), (115, 120), (126, 120), (99, 120), (110, 126), (85, 126), (85, 126), (66, 38), (66, 38), (66, 38), (480, 162), (480, 162), (480, 38), (382, 38), (52, 38), (52, 38), (47, 38), (47, 38), (480, 162), (480, 162), (480, 162), (480, 162), (480, 162), (480, 162), (480, 162), (480, 162), (99, 38), (99, 38), (99, 38), (480, 162), (480, 162), (52, 38), (52, 38), (47, 38), (47, 38), (480, 162), (480, 162), (480, 162), (480, 162), (480, 162), (480, 162), (99, 38), (480, 162), (99, 38), (480, 162), (480, 162), (480, 162), (480, 162), (480, 38), (382, 38), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (59, 112), (37, 112), (107, 43), (160, 43), (42, 43), (42, 43), (40, 41), (42, 43), (40, 41), (320, 216), (320, 216), (320, 216), (80, 43), (80, 44), (320, 216), (80, 43), (43, 43), (43, 43), (37, 43), (37, 43), (83, 9), (80, 43), (80, 43), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (96, 31), (33, 34), (25, 26)]
SharedIPhone2x_4_1_0_ImageSizes = [(32, 40), (32, 40), (38, 40), (40, 40), (38, 40), (40, 40), (38, 40), (40, 40), (38, 40), (40, 40), (38, 40), (38, 40), (32, 40), (20, 40), (10, 40), (42, 40), (42, 40), (42, 40), (6, 40), (6, 40), (22, 40), (22, 40), (50, 40), (24, 40), (12, 40), (14, 40), (30, 40), (38, 40), (23, 40), (20, 40), (24, 40), (16, 40), (10, 40), (14, 40), (14, 40), (16, 40), (14, 40), (14, 40), (14, 40), (14, 40), (14, 40), (24, 40), (16, 40), (10, 40), (14, 40), (14, 40), (16, 40), (14, 40), (14, 40), (14, 40), (14, 40), (14, 40), (20, 40), (20, 40), (40, 40), (22, 40), (40, 40), (2, 40), (2, 444), (640, 80), (640, 80), (12, 24), (12, 24), (12, 24), (12, 24), (22, 22), (22, 18), (18, 36), (18, 36), (18, 36), (18, 36), (22, 22), (22, 18), (40, 40), (28, 30), (40, 40), (74, 74), (28, 30), (40, 40), (28, 30), (40, 40), (74, 74), (28, 30), (40, 40), (28, 30), (40, 40), (74, 74), (28, 30), (28, 30), (28, 30), (28, 30), (28, 30), (28, 30), (28, 30), (28, 30), (28, 30), (40, 40), (28, 30), (40, 40), (74, 74), (28, 30), (40, 40), (28, 30), (40, 40), (74, 74), (28, 30), (40, 40), (28, 30), (40, 40), (74, 74), (28, 30), (40, 40), (28, 30), (40, 40), (74, 74), (28, 30), (40, 40), (28, 30), (40, 40), (74, 74), (28, 30), (40, 40), (28, 30), (40, 40), (74, 74), (28, 30), (40, 40), (28, 30), (40, 40), (74, 74), (28, 30), (40, 40), (28, 30), (40, 40), (74, 74), (28, 30), (40, 40), (28, 30), (40, 40), (74, 74), (28, 30), (640, 80), (640, 80), (38, 40), (40, 40), (38, 40), (40, 40), (38, 40), (40, 40), (38, 40), (40, 40), (38, 40), (38, 40), (32, 40), (20, 40), (10, 40), (42, 40), (42, 40), (42, 40), (6, 40), (6, 40), (22, 40), (22, 40), (8, 8), (50, 40), (24, 40), (12, 40), (14, 40), (30, 40), (38, 40), (2, 40), (2, 40), (26, 40), (24, 40), (16, 40), (10, 40), (14, 40), (14, 40), (16, 40), (14, 40), (14, 40), (14, 40), (14, 40), (14, 40), (24, 40), (16, 40), (10, 40), (14, 40), (14, 40), (16, 40), (14, 40), (14, 40), (14, 40), (14, 40), (14, 40), (19, 40), (20, 40), (40, 40), (22, 40), (40, 40), (2, 42), (640, 80), (640, 80), (2, 44), (10, 40), (46, 56), (46, 56), (54, 92), (54, 92), (54, 92), (50, 92), (50, 92), (50, 92), (50, 92), (2, 88), (54, 92), (54, 92), (54, 92), (50, 92), (50, 92), (560, 4), (18, 20), (50, 50), (50, 50), (46, 36), (44, 34), (42, 36), (34, 28), (32, 38), (26, 26), (32, 38), (26, 26), (42, 36), (34, 28), (44, 46), (54, 56), (54, 56), (2, 88), (2, 98), (48, 32), (40, 32), (48, 36), (40, 30), (44, 36), (36, 28), (58, 58), (58, 58), (2, 88), (2, 64), (42, 38), (62, 72), (62, 72), (62, 72), (62, 72), (62, 72), (62, 72), (62, 72), (62, 72), (62, 72), (62, 72), (62, 72), (62, 72), (62, 72), (62, 72), (62, 72), (62, 72), (52, 54), (52, 54), (52, 54), (52, 54), (52, 54), (52, 54), (52, 54), (52, 54), (52, 54), (52, 54), (52, 54), (52, 54), (52, 54), (52, 54), (52, 54), (52, 54), (62, 72), (62, 72), (62, 72), (62, 72), (62, 72), (62, 72), (62, 72), (62, 72), (62, 72), (62, 72), (62, 72), (62, 72), (62, 72), (62, 72), (62, 72), (52, 54), (52, 54), (52, 54), (52, 54), (52, 54), (52, 54), (52, 54), (52, 54), (52, 54), (52, 54), (52, 54), (52, 54), (52, 54), (52, 54), (52, 54), (36, 38), (36, 38), (38, 38), (34, 34), (58, 32), (66, 32), (36, 36), (30, 30), (26, 26), (46, 36), (38, 38), (32, 34), (68, 60), (56, 48), (68, 60), (56, 48), (68, 60), (56, 48), (68, 60), (68, 60), (56, 48), (56, 48), (28, 32), (30, 36), (32, 34), (200, 200), (46, 36), (36, 44), (28, 34), (49, 36), (40, 32), (42, 38), (40, 40), (14, 14), (34, 34), (32, 42), (2, 88), (48, 34), (48, 34), (52, 76), (52, 76), (52, 76), (52, 76), (94, 76), (94, 76), (94, 76), (94, 76), (48, 24), (48, 24), (4, 76), (42, 76), (42, 76), (2, 76), (2, 76), (42, 76), (42, 76), (22, 34), (2, 34), (22, 34), (42, 76), (42, 76), (48, 44), (48, 44), (2, 114), (82, 140), (34, 114), (34, 114), (82, 140), (6, 38), (2, 192), (2, 86), (2, 86), (42, 86), (42, 86), (42, 86), (42, 86), (2, 60), (8, 60), (8, 60), (18, 60), (2, 60), (8, 60), (8, 60), (18, 60), (30, 86), (26, 32), (46, 38), (42, 60), (22, 60), (42, 60), (2, 88), (22, 60), (2, 148), (42, 60), (2, 88), (22, 60), (2, 148), (42, 60), (42, 60), (2, 88), (22, 60), (22, 60), (2, 148), (22, 60), (22, 60), (30, 48), (30, 48), (2, 64), (18, 48), (18, 48), (30, 48), (30, 48), (2, 64), (18, 48), (18, 48), (30, 48), (30, 48), (2, 64), (18, 48), (18, 48), (18, 48), (18, 48), (18, 48), (22, 60), (22, 60), (12, 12), (12, 12), (124, 104), (22, 106), (30, 78), (30, 78), (28, 28), (2, 324), (2, 360), (2, 432), (30, 324), (30, 324), (30, 360), (30, 360), (30, 432), (30, 432), (2, 324), (2, 360), (2, 432), (30, 324), (30, 324), (30, 360), (30, 360), (30, 432), (30, 432), (18, 88), (2, 96), (2, 124), (2, 324), (2, 360), (2, 432), (18, 324), (18, 360), (18, 432), (14, 2), (38, 66), (38, 92), (38, 66), (38, 92), (22, 28), (11, 14), (568, 124), (568, 124), (22, 86), (22, 86), (22, 86), (28, 28), (26, 88), (26, 88), (28, 28), (30, 22), (28, 28), (58, 58), (58, 58), (58, 58), (58, 58), (58, 58), (34, 66), (34, 66), (16, 62), (16, 62), (16, 62), (2, 62), (2, 62), (2, 62), (16, 62), (16, 62), (16, 62), (20, 20), (2, 20), (10, 10), (14, 14), (10, 10), (108, 108), (2, 12), (2, 60), (10, 18), (10, 18), (2, 18), (2, 16), (8, 16), (8, 16), (34, 36), (44, 48), (10, 18), (10, 18), (2, 18), (80, 58), (80, 58), (70, 62), (70, 62), (70, 62), (70, 62), (22, 60), (22, 60), (2, 88), (2, 2), (30, 30), (34, 62), (34, 62), (34, 62), (2, 62), (2, 62), (2, 62), (34, 62), (34, 62), (34, 62), (2, 46), (2, 46), (16, 20), (24, 60), (24, 60), (2, 60), (2, 60), (20, 48), (20, 48), (2, 48), (2, 48), (24, 60), (24, 60), (2, 60), (2, 60), (20, 48), (20, 48), (2, 48), (2, 48), (44, 88), (44, 88), (2, 88), (12, 88), (12, 88), (44, 88), (44, 88), (2, 88), (12, 88), (12, 88), (2, 88), (22, 60), (22, 60), (2, 60), (2, 60), (92, 92), (18, 92), (18, 92), (92, 92), (92, 92), (18, 92), (18, 92), (18, 92), (18, 92), (2, 92), (2, 92), (2, 92), (2, 92), (22, 18), (10, 18), (2, 18), (46, 46), (46, 46), (22, 18), (10, 18), (2, 18), (512, 512), (512, 512), (640, 920), (34, 54), (34, 54), (34, 54), (34, 54), (28, 32), (4, 32), (34, 54), (34, 54), (10, 54), (22, 54), (22, 54), (22, 54), (96, 64), (56, 40), (64, 58), (58, 58), (58, 56), (80, 78), (80, 78), (76, 50), (50, 50), (58, 32), (66, 32), (58, 14), (46, 46), (70, 42), (48, 48), (6, 38), (6, 38), (38, 34), (20, 26), (58, 62), (58, 62), (20, 26), (2, 86), (2, 86), (2, 86), (2, 86), (2, 86), (12, 12), (20, 20), (38, 38), (38, 38), (604, 92), (2, 34), (2, 28), (604, 92), (2, 432), (30, 432), (2, 432), (30, 432), (18, 88), (2, 96), (2, 124), (2, 432), (18, 432), (38, 60), (38, 60), (38, 60), (2, 88), (22, 60), (22, 60), (22, 60), (58, 58), (58, 58), (58, 58), (58, 58), (58, 58), (30, 48), (30, 48), (30, 48), (2, 64), (18, 48), (18, 48), (18, 48), (2, 64), (2, 60), (2, 60), (22, 60), (22, 60), (22, 60), (22, 60), (22, 60), (22, 60), (2, 48), (2, 48), (18, 48), (18, 48), (18, 48), (18, 48), (18, 48), (18, 48), (2, 88), (2, 60), (26, 26), (26, 26), (26, 26), (26, 26), (48, 52), (22, 18), (22, 18), (22, 18), (16, 16), (16, 16), (16, 16), (16, 16), (14, 14), (42, 42), (30, 34), (254, 254), (254, 254), (254, 254), (290, 118), (282, 110), (290, 118), (290, 118), (220, 228), (220, 228), (220, 228), (220, 228), (220, 228), (220, 228), (220, 228), (220, 228), (128, 128), (204, 228)]
SharedIPad_4_1_0_ImageSizes = [(16, 20), (16, 20), (19, 20), (20, 20), (19, 20), (20, 20), (19, 20), (20, 20), (19, 20), (20, 20), (19, 20), (19, 20), (16, 20), (10, 20), (5, 20), (21, 20), (21, 20), (21, 20), (3, 20), (3, 20), (11, 20), (11, 20), (26, 20), (25, 20), (12, 20), (6, 20), (7, 20), (15, 20), (19, 20), (13, 20), (10, 20), (12, 20), (8, 20), (5, 20), (7, 20), (7, 20), (8, 20), (7, 20), (7, 20), (7, 20), (7, 20), (7, 20), (12, 20), (8, 20), (5, 20), (7, 20), (7, 20), (8, 20), (7, 20), (7, 20), (7, 20), (7, 20), (7, 20), (10, 20), (10, 20), (20, 20), (11, 20), (20, 20), (1, 20), (1, 222), (320, 40), (320, 40), (320, 40), (320, 40), (6, 12), (6, 12), (6, 12), (6, 12), (11, 11), (11, 11), (11, 11), (11, 9), (9, 18), (9, 18), (9, 18), (9, 18), (11, 11), (11, 11), (11, 11), (11, 9), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (14, 15), (20, 20), (14, 15), (20, 20), (37, 37), (14, 15), (320, 40), (320, 40), (19, 20), (20, 20), (19, 20), (20, 20), (19, 20), (20, 20), (19, 20), (20, 20), (19, 20), (19, 20), (16, 20), (10, 20), (5, 20), (21, 20), (21, 20), (21, 20), (3, 20), (3, 20), (11, 20), (11, 20), (4, 4), (25, 20), (12, 20), (6, 20), (7, 20), (15, 20), (19, 20), (1, 20), (1, 20), (13, 20), (12, 20), (8, 20), (5, 20), (7, 20), (7, 20), (8, 20), (7, 20), (7, 20), (7, 20), (7, 20), (7, 20), (12, 20), (8, 20), (5, 20), (7, 20), (7, 20), (8, 20), (7, 20), (7, 20), (7, 20), (7, 20), (7, 20), (10, 20), (10, 20), (20, 20), (11, 20), (20, 20), (1, 21), (320, 40), (320, 40), (1, 22), (5, 20), (23, 28), (23, 28), (27, 46), (27, 46), (27, 46), (25, 46), (25, 46), (25, 46), (25, 46), (1, 44), (27, 46), (27, 46), (25, 46), (25, 46), (25, 46), (1, 23), (11, 43), (11, 43), (11, 43), (11, 43), (11, 43), (11, 43), (280, 2), (3, 31), (9, 10), (25, 25), (25, 25), (29, 29), (29, 29), (23, 18), (22, 17), (21, 18), (17, 14), (16, 19), (13, 13), (16, 19), (13, 13), (21, 18), (17, 14), (22, 23), (27, 28), (27, 28), (1, 44), (1, 49), (1, 49), (1, 44), (11, 24), (24, 16), (20, 16), (24, 18), (20, 15), (22, 18), (18, 14), (29, 29), (29, 29), (1, 44), (1, 32), (1, 32), (1, 44), (20, 20), (21, 19), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (26, 27), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (22, 32), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (31, 36), (18, 19), (18, 19), (19, 19), (17, 17), (11, 24), (11, 24), (29, 16), (33, 16), (18, 18), (15, 15), (13, 13), (23, 18), (19, 19), (16, 17), (34, 30), (28, 24), (34, 30), (28, 24), (34, 30), (28, 24), (34, 30), (34, 30), (28, 24), (28, 24), (14, 16), (15, 18), (16, 17), (100, 100), (23, 18), (18, 22), (14, 17), (18, 21), (25, 20), (20, 16), (21, 19), (20, 20), (7, 7), (1, 44), (1, 44), (17, 17), (16, 21), (18, 19), (18, 19), (1, 44), (1, 32), (1, 44), (24, 17), (24, 17), (26, 38), (26, 38), (26, 38), (26, 38), (47, 38), (47, 38), (47, 38), (47, 38), (24, 12), (24, 12), (2, 38), (21, 38), (21, 38), (1, 38), (1, 38), (21, 38), (21, 38), (11, 17), (1, 17), (11, 17), (21, 38), (21, 38), (24, 22), (24, 22), (1, 57), (41, 70), (17, 57), (17, 57), (41, 70), (4, 4), (520, 360), (360, 520), (480, 20), (320, 20), (45, 45), (45, 45), (49, 48), (49, 48), (3, 19), (1, 44), (1, 96), (1, 108), (1, 43), (1, 43), (21, 43), (21, 43), (21, 43), (21, 43), (1, 30), (4, 30), (4, 30), (9, 30), (1, 30), (4, 30), (4, 30), (9, 30), (15, 43), (13, 16), (23, 19), (21, 30), (11, 30), (21, 30), (1, 44), (11, 30), (1, 74), (21, 30), (1, 44), (11, 30), (1, 74), (21, 30), (21, 30), (1, 44), (11, 30), (11, 30), (1, 74), (11, 30), (11, 30), (13, 30), (13, 30), (15, 24), (15, 24), (1, 32), (9, 24), (9, 24), (15, 24), (15, 24), (1, 32), (9, 24), (9, 24), (15, 24), (15, 24), (1, 32), (9, 24), (9, 24), (9, 24), (9, 24), (9, 24), (20, 30), (20, 30), (13, 30), (13, 30), (11, 30), (11, 30), (21, 30), (21, 30), (1, 44), (11, 30), (11, 30), (1, 74), (11, 30), (11, 30), (6, 6), (6, 6), (62, 52), (11, 53), (15, 39), (15, 39), (18, 18), (1, 162), (1, 180), (1, 216), (15, 162), (15, 162), (15, 180), (15, 180), (15, 216), (15, 216), (15, 216), (15, 216), (1, 162), (1, 180), (1, 216), (1, 216), (15, 162), (15, 162), (15, 180), (15, 180), (15, 216), (15, 216), (15, 216), (15, 216), (9, 44), (1, 48), (1, 62), (1, 62), (1, 162), (1, 180), (1, 216), (9, 162), (9, 180), (9, 216), (7, 1), (19, 33), (19, 46), (19, 33), (19, 46), (288, 167), (288, 167), (306, 150), (306, 150), (306, 150), (288, 167), (288, 167), (328, 31), (288, 167), (288, 167), (306, 150), (306, 150), (306, 150), (288, 167), (288, 167), (288, 167), (288, 167), (306, 150), (306, 150), (306, 150), (288, 167), (288, 167), (288, 73), (288, 73), (309, 56), (288, 73), (288, 73), (288, 73), (288, 73), (309, 56), (288, 73), (288, 73), (288, 73), (288, 73), (309, 56), (288, 73), (288, 73), (11, 14), (11, 14), (284, 62), (284, 62), (11, 43), (11, 43), (11, 43), (14, 14), (13, 44), (13, 44), (14, 14), (15, 11), (14, 14), (29, 29), (29, 29), (29, 29), (29, 29), (29, 29), (17, 33), (17, 33), (8, 31), (8, 31), (6, 30), (8, 31), (6, 30), (1, 31), (1, 31), (1, 30), (1, 31), (1, 30), (8, 31), (8, 31), (6, 30), (8, 31), (6, 30), (10, 10), (1, 10), (5, 5), (7, 7), (5, 5), (54, 54), (1, 6), (1, 30), (5, 9), (5, 9), (1, 9), (1, 8), (4, 8), (4, 8), (17, 18), (22, 24), (5, 9), (5, 9), (1, 9), (40, 29), (40, 29), (35, 31), (35, 31), (35, 31), (35, 31), (11, 30), (11, 30), (1, 44), (1, 1), (15, 15), (17, 31), (17, 31), (15, 30), (17, 31), (15, 30), (1, 31), (1, 31), (1, 30), (1, 31), (1, 30), (17, 31), (17, 31), (15, 30), (17, 31), (15, 30), (1, 23), (1, 23), (8, 10), (12, 30), (12, 30), (1, 30), (1, 30), (10, 24), (10, 24), (1, 24), (1, 24), (12, 30), (12, 30), (13, 30), (13, 30), (13, 30), (13, 30), (1, 30), (1, 30), (1, 30), (1, 30), (1, 30), (1, 30), (10, 24), (10, 24), (1, 24), (1, 24), (13, 30), (13, 30), (1, 30), (1, 30), (22, 44), (22, 44), (1, 44), (6, 44), (6, 44), (22, 44), (22, 44), (1, 44), (6, 44), (6, 44), (1, 44), (1, 44), (11, 30), (11, 30), (13, 30), (13, 30), (1, 30), (1, 30), (1, 30), (1, 30), (46, 46), (9, 46), (9, 46), (46, 46), (46, 46), (9, 46), (9, 46), (9, 46), (9, 46), (1, 46), (1, 46), (1, 46), (1, 46), (11, 43), (11, 43), (11, 43), (11, 43), (11, 14), (11, 14), (11, 9), (5, 9), (1, 9), (23, 23), (23, 23), (11, 9), (5, 9), (1, 9), (6, 6), (1024, 1024), (1024, 1024), (256, 256), (256, 256), (320, 460), (17, 27), (17, 27), (17, 27), (17, 27), (14, 16), (2, 16), (17, 27), (17, 27), (5, 27), (11, 27), (11, 27), (11, 27), (48, 32), (36, 39), (36, 39), (28, 20), (45, 36), (45, 36), (32, 29), (33, 39), (33, 39), (29, 29), (35, 39), (35, 39), (29, 28), (40, 39), (40, 39), (38, 25), (45, 36), (45, 36), (25, 25), (29, 16), (33, 16), (29, 7), (31, 39), (31, 39), (23, 23), (37, 39), (37, 39), (35, 21), (30, 39), (30, 39), (24, 24), (3, 19), (3, 19), (19, 17), (1, 14), (1, 14), (10, 13), (29, 31), (29, 31), (10, 13), (1, 43), (1, 43), (1, 43), (1, 43), (1, 43), (6, 6), (10, 10), (19, 19), (19, 19), (19, 19), (19, 19), (302, 46), (1, 17), (1, 14), (302, 46), (1, 216), (15, 216), (1, 216), (15, 216), (9, 44), (1, 48), (1, 62), (1, 216), (9, 216), (19, 30), (19, 30), (19, 30), (19, 30), (1, 44), (1, 44), (11, 30), (11, 30), (11, 30), (11, 30), (29, 29), (29, 29), (29, 29), (29, 29), (29, 29), (21, 51), (21, 51), (21, 51), (21, 51), (15, 24), (15, 24), (15, 24), (1, 32), (9, 24), (9, 24), (9, 24), (1, 32), (1, 30), (1, 30), (1, 30), (1, 30), (11, 30), (11, 30), (11, 30), (11, 30), (11, 30), (11, 30), (11, 30), (11, 30), (1, 38), (13, 41), (13, 41), (13, 40), (1, 24), (1, 24), (9, 24), (9, 24), (9, 24), (9, 24), (9, 24), (9, 24), (1, 44), (1, 44), (1, 30), (13, 13), (13, 13), (13, 13), (13, 13), (24, 26), (100, 70), (100, 70), (100, 70), (56, 75), (11, 9), (11, 9), (11, 9), (8, 8), (7, 7), (24, 11), (24, 11), (80, 44), (80, 44), (80, 44), (80, 44), (80, 44), (80, 44), (25, 26), (13, 17), (31, 26), (98, 38), (98, 38), (98, 38), (98, 38), (96, 34), (96, 34), (96, 34), (98, 38), (98, 38), (283, 38), (283, 38), (283, 38), (95, 38), (95, 38), (95, 38), (95, 38), (283, 38), (283, 38), (80, 44), (80, 44), (80, 43), (80, 43), (80, 44), (80, 28), (80, 28), (80, 28), (80, 44), (80, 44), (160, 44), (160, 44), (160, 44), (53, 44), (53, 44), (53, 44), (53, 44), (160, 44), (160, 44), (127, 127), (127, 127), (127, 127), (145, 59), (141, 55), (145, 59), (145, 59), (20, 20), (110, 114), (110, 114), (110, 114), (110, 114), (110, 114), (110, 114), (110, 114), (110, 114), (64, 64), (30, 42), (30, 42), (320, 216), (83, 120), (91, 120), (88, 120), (79, 120), (102, 114), (114, 125), (79, 126), (78, 126), (220, 500), (132, 750), (132, 750), (176, 500), (132, 500), (176, 500), (132, 500), (42, 43), (42, 43), (320, 216), (320, 216), (320, 216), (320, 216), (240, 43), (43, 43), (43, 43), (37, 43), (37, 43), (103, 120), (115, 120), (126, 120), (99, 120), (110, 126), (85, 126), (85, 126), (66, 38), (66, 38), (66, 38), (480, 162), (480, 162), (480, 38), (382, 38), (52, 38), (52, 38), (47, 38), (47, 38), (480, 162), (480, 162), (480, 162), (480, 162), (480, 162), (480, 162), (480, 162), (480, 162), (99, 38), (99, 38), (99, 38), (480, 162), (480, 162), (52, 38), (52, 38), (47, 38), (47, 38), (480, 162), (480, 162), (480, 162), (480, 162), (480, 162), (480, 162), (99, 38), (480, 162), (99, 38), (480, 162), (480, 162), (480, 162), (480, 162), (480, 38), (382, 38), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (59, 112), (37, 112), (107, 43), (160, 43), (42, 43), (42, 43), (40, 41), (42, 43), (40, 41), (320, 216), (320, 216), (320, 216), (80, 43), (80, 44), (320, 216), (80, 43), (43, 43), (43, 43), (37, 43), (37, 43), (83, 9), (80, 43), (80, 43), (320, 216), (320, 216), (320, 216), (320, 216), (320, 216), (96, 31), (33, 34), (25, 26)]
SharedIPad2x_4_1_0_ImageSizes = []



#
# If you're supporting a new file, add a key/value pair for it.
# If you're supported a new file version, add a new tuple in the appropriate value's list.
#

SupportedFiles = {
    KeyboardLatinArtwork: [
        (KeyboardLatin_2_0_0_Size, KeyboardLatin_2_0_0_ImageSizes, 'keyboard-latin-'),
        (KeyboardLatin_2_2_0_Size, KeyboardLatin_2_2_0_ImageSizes, 'keyboard-latin-'),
    ],
    KeyboardCommonArtwork: [
        (KeyboardCommon_2_0_0_Size, KeyboardCommon_2_0_0_ImageSizes, 'keyboard-common-'),
        (KeyboardCommon_2_2_0_Size, KeyboardCommon_2_2_0_ImageSizes, 'keyboard-common-'),
    ],
    OtherArtwork: [
        (Other_2_0_0_Size, Other_2_0_0_ImageSizes, 'other-'),
        (Other_2_2_0_Size, Other_2_2_0_ImageSizes, 'other-'),
        (Other_3_2_0_Size, Other_3_2_0_ImageSizes, 'other-'),
    ],
    MobilePhonePackedImagesArtwork: [
        (MobilePhonePackedImages_2_0_0_Size, MobilePhonePackedImages_2_0_0_ImageSizes, 'mobile-phone-packed-images-'),
    ],
    SharedIPhoneArtwork: [
        (SharedIPhone_4_1_0_Size, SharedIPhone_4_1_0_ImageSizes, 'shared-iphone-'),
    ],
    SharedIPhone2xArtwork: [
        (SharedIPhone2x_4_1_0_Size, SharedIPhone2x_4_1_0_ImageSizes, 'shared-iphone-2x-'),
    ],
    SharedIPadArtwork: [
        (SharedIPad_4_1_0_Size, SharedIPad_4_1_0_ImageSizes, 'shared-ipad-'),
    ],
    SharedIPad2xArtwork: [
        (SharedIPad2x_4_1_0_Size, SharedIPad2x_4_1_0_ImageSizes, 'shared-ipad-2x-'),
    ],
}

def usage_basic():
    print "\nTo convert an artwork file into a bunch of PNG files, run like this:"
    print "   %s -export file.artwork ./exportDirectoryName" % sys.argv[0]
    print "\nTo convert a bunch of PNG files into an artwork file, run like this:"
    print "   %s -import original.artwork\n                          ./importDirectoryName created.artwork" % sys.argv[0]
    print "\n   NOTE: Even though you are 'creating' a new artwork file with -import, "
    print "   you must still specify the original artwork file on the command line."
    print "   This is because the 2.0 artwork files have a bunch of extra stuff that"
    print "   isn't images at the end -- and you've got to keep those bits around."
    print
    sys.exit(-1)

def usage_filename():
    print "\nThis application can only export and import the following files:"
    for k, vs in zip(SupportedFiles.keys(), SupportedFiles.values()):
        for v in vs:
            expectedSize, imageSizes, exportPrefix = v
            print "\t%s of size %u" % (k, expectedSize)
    print
    sys.exit(-1)

def usage_imagecountmismatch(imageFileName, expectedCount):
    print "\nIMPORT FAILED."
    print "\nWhen importing, you must have the same number of images as the original artwork"
    print "file. But we couldn't find the image named %s.\nThere should be %d total images." % (imageFileName, expectedCount)
    print
    sys.exit(-1)
    
def usage_imagesizemismatch(imageFileName, expectedSize, actualSize):
    print "\nIMPORT FAILED."
    print "\nWhen importing, your images must have the same size as the original artwork"
    print "file. Otherwise, things will break! The file %s should have\nbeen %dx%d but was actually %dx%d." % (imageFileName, expectedSize[0], expectedSize[1], actualSize[0], actualSize[1])
    print
    sys.exit(-1)

def usage_imageformat(imageFileName):
    print "\nIMPORT FAILED."
    print "\nThe artwork tool does not support the format of the image file\nnamed %s. Please try creating the image with a\ndifferent piece of software." % imageFileName
    print
    sys.exit(-1)

WidthByteAlignment = 8
ImageByteAlignment = 4096

def align_bytes(byteLocation, alignmentAmount):
    alignedByteLocation = byteLocation
    remainder = alignedByteLocation % alignmentAmount
    if remainder != 0:
        alignedByteLocation += (alignmentAmount - remainder)
    return alignedByteLocation

def export_images(data, imageSizes, exportDirectory, exportPrefix, debug = True, max_export = None):
    imageBase = 0
    imageIndex = 0
    
    for width, height in imageSizes:
        exportedImage = PIL.Image.new("RGBA", (width, height))
        exportedPixels = exportedImage.load()

        memoryWidth = align_bytes(width, WidthByteAlignment)

        for y in range(height):
            for x in range(width):
                pixelPosition = imageBase + (4 * ((y * memoryWidth) + x))
                b, g, r, a = struct.unpack_from('<BBBB', data, pixelPosition)
                exportedPixels[x, y] = (r, g, b, a)
                
        imageName = path.join(exportDirectory, '%s%d.png' % (exportPrefix, imageIndex))
        imageIndex += 1
        exportedImage.save(imageName, "PNG")

        if debug:
            print "\texported %s" % imageName
        
        imageBase += (4 * height * memoryWidth)
        imageBase = align_bytes(imageBase, ImageByteAlignment)
        
        if (max_export is not None) and imageIndex == max_export:
            return

def import_images(data, imageSizes, importDirectory, importPrefix, outputArtworkFileFullName):
    imageBase = 0
    imageIndex = 0
    outputData = []

    for width, height in imageSizes:
        imageName = path.join(importDirectory, '%s%d.png' % (importPrefix, imageIndex))
        imageIndex += 1

        importedImage = None
        try:     
            importedImage = PIL.Image.open(imageName)
        except IOError:
            usage_imagecountmismatch(imageName, len(imageSizes))
            
        actualWidth, actualHeight = importedImage.size
        if (actualWidth != width) or (actualHeight != height):
            usage_imagesizemismatch(imageName, (width, height), (actualWidth, actualHeight))

        # Attempt to accept images in just about any color format.
        # Especially we directly support RGB and RGBA.
        finalMode = importedImage.mode
        finalImage = importedImage

        try:
            if finalMode != 'RGBA' and finalMode != 'RGB':
                finalImage = importedImage.convert('RGBA')
                finalMode = 'RGBA'
        except:
            usage_imageformat(imageName)
                    
        finalPixels = finalImage.load()
        memoryWidth = align_bytes(width, WidthByteAlignment)
        widthDeltaString = '\x00\x00\x00\x00' * (memoryWidth - width)

        for y in range(height):
            for x in range(width):
                if finalMode == 'RGBA':
                    r, g, b, a = finalPixels[x, y]
                    outputData.append(struct.pack('<BBBB', b, g, r, a))
                else:
                    r, g, b = finalPixels[x, y]
                    outputData.append(struct.pack('<BBBB', b, g, r, 0))
                
            # Be sure to properly align the images when packing them
            outputData.append(widthDeltaString)

        imageBase += (4 * height * memoryWidth)
        if (imageIndex < len(imageSizes)):
            nextImageBase = align_bytes(imageBase, ImageByteAlignment)
            outputData.append('\x00' * (nextImageBase - imageBase))
            imageBase = nextImageBase

        print "\timported %s" % imageName

    # After we're done writing images, append the 'extra' bytes that appear in the 
    outputData.append(data[imageBase:])

    # Cons up the final data and do a sanity check to make sure everything is right!
    print "\tjoining all imported images..."
    finalData = ''.join(outputData)
    if len(finalData) != len(data):
        print "INTERNAL FAILURE WHILE IMPORTING. Please contact Dave Peck <code [at] davepeck [dot] org>."
        usage_basic()

    print "\twriting joined images to file..."
    outputFile = open(outputArtworkFileFullName, 'wb')
    outputFile.write(finalData)
    outputFile.close()
    
                       
def action_export(artworkFileFullName, exportDirectory, debug = True, max_export = None):
    if not os.path.exists(exportDirectory):
        os.makedirs(exportDirectory)

    artworkFileName = path.basename(artworkFileFullName)

    if not artworkFileName in SupportedFiles:
        usage_filename()

    exportInfos = SupportedFiles[artworkFileName]

    # For now, just let this throw an exception if they entered a bad file name
    file = open(artworkFileFullName, 'rb')
    data = file.read()
    file.close()

    expectedFileSize = 0
    imageSizes = None
    exportPrefix = None
    found = False
    
    for exportInfo in exportInfos:
        expectedFileSize, imageSizes, exportPrefix = exportInfo
        if len(data) == expectedFileSize:
            found = True
            break

    if not found:
        usage_filename()

    print "\nExporting images from %s to directory %s..." % (artworkFileName, exportDirectory)
    export_images(data, imageSizes, exportDirectory, exportPrefix, debug = debug, max_export = max_export)
    if debug:
        print "Finished exporting from %s" % artworkFileName
    print
    
def action_create(originalArtworkFileName, importDirectory, outputArtworkFileName):

    originalArtworkFileName = path.basename(originalArtworkFileFullName)
    outputArtworkFileName = path.basename(outputArtworkFileFullName)

    if not originalArtworkFileName in SupportedFiles:
        usage_filename()

    importInfos = SupportedFiles[originalArtworkFileName]

    # For now, just let this throw an exception if they entered a bad file name
    originalFile = open(originalArtworkFileFullName, 'rb')
    originalData = originalFile.read()
    originalFile.close()

    expectedFileSize = 0
    imageSizes = None
    importPrefix = None
    found = False

    for importInfo in importInfos:
        expectedFileSize, imageSizes, importPrefix = importInfo
        if len(originalData) == expectedFileSize:
            found = True
            break

    if not found:
        usage_filename()

    print "\nImporting images to %s from directory %s..." % (outputArtworkFileName, importDirectory)
    import_images(originalData, imageSizes, importDirectory, importPrefix, outputArtworkFileFullName)
    print "Finished importing to %s" % outputArtworkFileName
    print
    pass


def action_survey(artworkFileFullName, exportDirectory, byte_offset, width_range, height):
    """
    This renders a single byte offset with a range of widths. The resulting
    images can be scanned through quickly to find likely candidates.
    """
    if not os.path.exists(exportDirectory):
        os.makedirs(exportDirectory)

    artworkFileName = path.basename(artworkFileFullName)

    if not artworkFileName in SupportedFiles:
        usage_filename()

    f = open(artworkFileFullName)
    data = mmap.mmap(f.fileno(), 0, access=mmap.ACCESS_READ, offset=byte_offset)

    for width in width_range:
        export_images(data, [(width, height)], exportDirectory, "survey-%dx%d-" % (width, height))

    data.close()
    f.close()


def action_guess(artwork_bytes, framework_binary, byte_offset, debug = True):
    f = open(framework_binary, "rb")
    data = mmap.mmap(f.fileno(), 0, access=mmap.ACCESS_READ)
    
    current_offset = byte_offset
    image_base = 0
    found = []
    
    try:
        while image_base < artwork_bytes:
            width, height = struct.unpack_from('<HH', data, current_offset)            
            found.append((width, height))

            current_offset += 8
            
            memoryWidth = align_bytes(width, WidthByteAlignment)
            image_base += (4 * height * memoryWidth)
            image_base = align_bytes(image_base, ImageByteAlignment)
    except:
        print "Whoops, looks like the guess offset didn't pan out."

    if debug:
        print found

    data.close()
    f.close()
    
    return found

def action_search(framework_binary, wh_pairs, debug = True):
    print "Searching for image sizes, starting with ", wh_pairs
    wh_bytes = []
    for wh_pair in wh_pairs:
        w, h = wh_pair
        wh_bytes.append(struct.pack('<HH', w, h))
    
    f = open(framework_binary, "rb")
    data = mmap.mmap(f.fileno(), 0, access=mmap.ACCESS_READ)
    
    skip_bytes = len(wh_bytes) * 8
    guess_offset = 0
    matches = []
    
    while (guess_offset+skip_bytes) < len(data):    
        found = False
        while not found and (guess_offset + skip_bytes) < len(data):
            temp_offset = 0
            for i in range(len(wh_bytes)):
                wh_byte = wh_bytes[i]
                if wh_byte != data[guess_offset+temp_offset:guess_offset+temp_offset+len(wh_byte)]:
                    break
                temp_offset += skip_bytes
                if i == len(wh_bytes) - 1:
                    found = True
            if not found:
                guess_offset += 1
        if found:
            matches.append(guess_offset)
            guess_offset += skip_bytes
            
    if debug:
        if len(matches) > 0:            
            print "Found likely matches:"
            for match in matches:
                print "\t0x%X (%d)" % (match, match)
        else:
            print "Sorry, no match was found."

    data.close()
    f.close()
    return matches
            
def intify(x):
    if x[:2] == "0x":
        return int(x[2:], 16)
    return int(x)
    
if __name__ == "__main__":
    if len(sys.argv) < 4:
        usage_basic()

    action = sys.argv[1].strip()
    if action == "-export":
        if len(sys.argv) != 4:
            usage_basic()
        artworkFileFullName = sys.argv[2].strip()
        exportDirectory = sys.argv[3].strip()
        action_export(artworkFileFullName, exportDirectory)
    elif action == "-import":
        if len(sys.argv) != 5:
            usage_basic()
        originalArtworkFileFullName = sys.argv[2].strip()
        importDirectory = sys.argv[3].strip()
        outputArtworkFileFullName = sys.argv[4].strip()
        action_create(originalArtworkFileFullName, importDirectory, outputArtworkFileFullName)
    elif action == "-survey":
        # UNDOCUMENTED FEATURE
        # -survey file.artwork ./exportDirectoryName offset width_min width_max height
        if len(sys.argv) != 8:
            usage_basic()
        byte_offset = intify(sys.argv[4])
        width_range = xrange(intify(sys.argv[5]), intify(sys.argv[6]))
        height = intify(sys.argv[7])
        action_survey(sys.argv[2], sys.argv[3], byte_offset, width_range, height)
    elif action == "-guess":
        # UNDOCUMENTED FEATURE
        # -guess <artwork file size in bytes> <framework binary> <byte offset into framework binary>
        if len(sys.argv) != 5:
            usage_basic()
        artwork_bytes = intify(sys.argv[2])
        framework_binary = sys.argv[3]
        byte_offset = intify(sys.argv[4])        
        action_guess(artwork_bytes, framework_binary, byte_offset)
    elif action == "-search":
        # UNDOCUMENTED FEATURE
        # -search <framework file> <at least one width/height pairs, separated by spaces>
        if len(sys.argv) < 4:
            usage_basic()
        framework_binary = sys.argv[2]
        wh_pairs = []
        current = 3
        while (current + 1) < len(sys.argv):
            wh_pairs.append((intify(sys.argv[current]), intify(sys.argv[current+1])))
            current += 2
        if len(wh_pairs) < 1:
            usage_basic()            
        action_search(framework_binary, wh_pairs) 
    elif action == "-ultra":
        # UNDOCUMENTED FEATURE (combines search + guess + survey!)
        # -ultra <framework file> <artwork file name> <target directory> <artwork file size> <search width> <seach height> <required width> <required height>
        if len(sys.argv) != 10:
            usage_basic()
        framework_binary = sys.argv[2]
        artwork_file_name = sys.argv[3]
        target_directory = sys.argv[4]
        artwork_bytes = intify(sys.argv[5])
        wh_pairs = [(intify(sys.argv[6]), intify(sys.argv[7]))]
        required_width = intify(sys.argv[8])
        required_height = intify(sys.argv[9])
        
        potential_offsets = action_search(framework_binary, wh_pairs, debug = False)
        survey_count = 0
        for potential_offset in potential_offsets:
            image_sizes = action_guess(artwork_bytes, framework_binary, potential_offset, debug = False)
            target_count = 0
            for image_size in image_sizes:
                if image_size[0] == required_width and image_size[1] == required_height:
                    target_count += 1
            print "For offset %X (%d), %d images were found, %d matching target (%d, %d)." % (potential_offset, potential_offset, len(image_sizes), target_count, required_width, required_height)
            if target_count > 0:
                SupportedFiles[artwork_file_name] = [(artwork_bytes, image_sizes, 'survey-')] # HACK
                sub_target_directory = target_directory + "/survey-%d-%d" % (survey_count, potential_offset)
                try:
                    os.makedirs(sub_target_directory + "/")
                except:
                    print "\t(encountered exception making directory. a problem?)"
                action_export(artwork_file_name, sub_target_directory, debug = True, max_export = 10)
                survey_count += 1
    else:
        usage_basic()

    
